# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
    - 'v*'

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build (windows-386)
      run: |
        export GOOS=windows
        export GOARCH=386
        go build -v -ldflags "-s -w" -o ./build/gov-${GOOS}-${GOARCH}.exe .
    
    - name: Build (windows-amd64)
      run: |
        export GOOS=windows
        export GOARCH=amd64
        go build -v -ldflags "-s -w" -o ./build/gov-${GOOS}-${GOARCH}.exe .
        
    - name: Build (linux-386)
      run: |
        export GOOS=linux
        export GOARCH=386
        go build -v -ldflags "-s -w" -o ./build/gov-${GOOS}-${GOARCH} .
        
    - name: Build (linux-amd64)
      run: |
        export GOOS=linux
        export GOARCH=amd64
        go build -v -ldflags "-s -w" -o ./build/gov-${GOOS}-${GOARCH} .
        
    - name: Build (linux-arm64)
      run: |
        export GOOS=linux
        export GOARCH=arm64
        go build -v -ldflags "-s -w" -o ./build/gov-${GOOS}-${GOARCH} .
        
    - name: Build (darwin-amd64)
      run: |
        export GOOS=darwin
        export GOARCH=amd64
        go build -v -ldflags "-s -w" -o ./build/gov-${GOOS}-${GOARCH} .
        
    - name: Build (darwin-arm64)
      run: |
        export GOOS=darwin
        export GOARCH=arm64
        go build -v -ldflags "-s -w" -o ./build/gov-${GOOS}-${GOARCH} .
        
    - name: Create Release and Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        body_path: .Release
        draft: false
        prerelease: false
        files: ./build/*
